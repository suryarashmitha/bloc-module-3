####Questions

> What is a hash table?

A: Hash tables, like arrays, are intended to be used as collections of similar data. They are commonly used to store data by some form of identifier. 

>  What is hashing?

A: Hash tables use hashing to convert string keys to numeric indices. Hashing is the conversion from a string to a numerical index. A hashing function is used to convert the key to a specific, fixed-length number, referred to as a hash code.

> How does a hash table store data?

A: A hash table is a data structure that is used to store keys/value pairs.

> How are hash tables and objects different?

A: If data we have is a static number of distinct values of different types, then use object to access it. Use a hash table when your data contains a variable number of consistently formatted values, each with an identifier.

> Determine whether you would use a hash table or an object to store each of the following pieces of data:

A:
    * A list of pets and their unique names: `Object`
    * The name, age, and the birthday of your best friend: `Object`
    * The name and location of every company in a given city: `Hash Table`
    * All of the books checked out from a library by a particular individual: `Hash Table`
    * The primary and secondary phone numbers for a contact: `Object`

>  Build a system that allows a sales associate to enter a customer's name, address, and phone number into the system and look up customers using their phone numbers. Store this information in a hash table.

A: Code:
class CustomerHashTable {
  constructor() {
    this.list = [];
  }   
  
  
  getByPhoneNumber(phonenumber) {
    return this.list.filter(li => li[2] === phonenumber);
  }

  set(name, address, phonenumber) {
    this.list.push([name, address, phonenumber])
  }
}

console.log("Enterting customer details into the system....");
var table = new CustomerHashTable();
for(var i=1; i<10; i++){
  table.set("name "+i, "Address "+i, "phonenumber "+i);
}
console.log(table);
console.log(table.getByPhoneNumber("phonenumber 1"));

>  Build a system that allows a store owner to track their store's inventory using a hash table for storage.

A: 
class InventoryHashTable {
  constructor() {
    this.list = [];
  }   
  
  set(item, count, serial) {
    this.list.push([item, count, serial])
  }
}

console.log("Inventory into the system....");
var table = new InventoryHashTable();
for(var i=1; i<10; i++){
  table.set("item "+i, "count "+i, "serial"+i);
}
console.log(table);
>  Build a system that allows digital copies of newspapers to be entered and searched by publisher and publication date. Use hash tables to store the necessary data.

A: 
class NewspaperHashTable {
  constructor() {
    this.list = [];
  }   
  
  
  getByPublisher(name) {
    let result = this.list.filter(li => li[1] === name);
    return result;
  }
  
  getByDate(date) {
    let result = this.list.filter(li => li[2] === date);
    return result;
  }

  set(name, publisher, date) {
    this.list.push([name, publisher, date])
  }
}

console.log("Enterting news papers into the system....");
var table = new NewspaperHashTable();
for(var i=1; i<10; i++){
  table.set("name "+i, "publisher "+i, "2018-07-2"+i);
}
console.log(table);
console.log(table.getByPublisher("publisher 1"));
console.log(table.getByDate("2018-07-25"));

